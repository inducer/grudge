kill(all);
load("eigen");
load("itensor");
load("diag");

/* -------------------------------------------------------------------------- */
/* Utilities */
/* -------------------------------------------------------------------------- */
mu: 1;
epsilon: 1;

coords:[x,y,z];

curl(x):=crossfunc(lambda([i,j], diff(x[j], coords[i])));
div(f):=sum(diff(f[j], coords[j]), j, 1, length(coords));

faraday(max_E, max_H):= curl(max_E) - %i * omega * max_H;
ampere(max_E, max_H):= curl(max_H) + %i * omega * mu * epsilon * max_E;
/*
ampere(max_E, max_H):= curl(max_H) + %i * omega * max_E;
*/


crossfunc(f):=makelist(
  sum(sum(
      levi_civita([i,j,k])*f(j,k),
   j,1,3),k,1,3),i,1,3)$

crossprod(a,b):=crossfunc(lambda([j,k], a[j]*b[k]));

/* -------------------------------------------------------------------------- */
/* Attempts */
/* -------------------------------------------------------------------------- */
nabla_t_squared(f):=diff(f, x, 2) + diff(f, y, 2);
nabla_t(f):= [diff(f, x, 1) , diff(f, y, 1), 0];

/*
gamma : sqrt((k_y^2 + k_x^2)/ (mu *epsilon)) ;
*/
omega : sqrt(k_x^2 + k_y^2 + k_z^2);
gamma : sqrt((k_y^2 + k_x^2)) ;

psi_cand:E_0*sin(k_x*x)*sin(k_y*y);



wave_eqn(f, gamma_s):=nabla_t_squared(f) + mu*epsilon*gamma_s*f;
gamma_s : gamma^2;

/* The _t indicates transverse components (i.e. x and y components only) */
/*
E_t(psi):=(-k_z/gamma_s)*sin(k_z * z)* nabla_t(psi);
H_t(psi):=crossprod((%i * omega /gamma_s)*cos(k_z * z)* [0,0,1], nabla_t(psi));
*/
E_t(psi):=(-k_z/gamma_s)*sin(k_z * z)* nabla_t(psi);
H_t(psi):=crossprod((%i * omega * epsilon/gamma_s)*cos(k_z * z)* [0,0,1], nabla_t(psi));


/* These are used as the analytic solution for a rectangular cavity resonator
    with travsverse magnetic waves */

E : E_t(psi_cand) + [0,0,psi_cand * cos(k_z * z)];
H :H_t(psi_cand);

Etime : E * %e ^ (- %i * omega * t);
Htime : H * %e ^ (- %i * omega * t);


trigrat(div(E));
trigrat(div(H));
trigrat(faraday(E,H));
trigrat(ampere(E,H));

